<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qianjiajia.kitchen.design.dao.AddressMapper">
  <resultMap id="BaseResultMap" type="com.qianjiajia.kitchen.design.domain.Address">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="CONSIGNEE_NAME" jdbcType="VARCHAR" property="consigneeName" />
    <result column="CONSIGNEE_PHONE" jdbcType="VARCHAR" property="consigneePhone" />
    <result column="CONSIGNEE_ADDRESS" jdbcType="VARCHAR" property="consigneeAddress" />
    <result column="DEFAULT_ADDRESS" jdbcType="VARCHAR" property="defaultAddress" />
    <result column="IS_DEFAULT" jdbcType="DECIMAL" property="isDefault" />
    <result column="ADDRESS_TYPE" jdbcType="DECIMAL" property="addressType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, USER_ID, CONSIGNEE_NAME, CONSIGNEE_PHONE, CONSIGNEE_ADDRESS, DEFAULT_ADDRESS, 
    IS_DEFAULT, ADDRESS_TYPE
  </sql>
  <select id="selectByExample" parameterType="com.qianjiajia.kitchen.design.domain.AddressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ADDRESS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ADDRESS
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ADDRESS
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qianjiajia.kitchen.design.domain.AddressExample">
    delete from ADDRESS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qianjiajia.kitchen.design.domain.Address">
    insert into ADDRESS (ID, USER_ID, CONSIGNEE_NAME, 
      CONSIGNEE_PHONE, CONSIGNEE_ADDRESS, DEFAULT_ADDRESS, 
      IS_DEFAULT, ADDRESS_TYPE)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{consigneeName,jdbcType=VARCHAR}, 
      #{consigneePhone,jdbcType=VARCHAR}, #{consigneeAddress,jdbcType=VARCHAR}, #{defaultAddress,jdbcType=VARCHAR}, 
      #{isDefault,jdbcType=DECIMAL}, #{addressType,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.qianjiajia.kitchen.design.domain.Address">
    insert into ADDRESS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="consigneeName != null">
        CONSIGNEE_NAME,
      </if>
      <if test="consigneePhone != null">
        CONSIGNEE_PHONE,
      </if>
      <if test="consigneeAddress != null">
        CONSIGNEE_ADDRESS,
      </if>
      <if test="defaultAddress != null">
        DEFAULT_ADDRESS,
      </if>
      <if test="isDefault != null">
        IS_DEFAULT,
      </if>
      <if test="addressType != null">
        ADDRESS_TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="consigneeName != null">
        #{consigneeName,jdbcType=VARCHAR},
      </if>
      <if test="consigneePhone != null">
        #{consigneePhone,jdbcType=VARCHAR},
      </if>
      <if test="consigneeAddress != null">
        #{consigneeAddress,jdbcType=VARCHAR},
      </if>
      <if test="defaultAddress != null">
        #{defaultAddress,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null">
        #{isDefault,jdbcType=DECIMAL},
      </if>
      <if test="addressType != null">
        #{addressType,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qianjiajia.kitchen.design.domain.AddressExample" resultType="java.lang.Long">
    select count(*) from ADDRESS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ADDRESS
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.consigneeName != null">
        CONSIGNEE_NAME = #{record.consigneeName,jdbcType=VARCHAR},
      </if>
      <if test="record.consigneePhone != null">
        CONSIGNEE_PHONE = #{record.consigneePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.consigneeAddress != null">
        CONSIGNEE_ADDRESS = #{record.consigneeAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.defaultAddress != null">
        DEFAULT_ADDRESS = #{record.defaultAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.isDefault != null">
        IS_DEFAULT = #{record.isDefault,jdbcType=DECIMAL},
      </if>
      <if test="record.addressType != null">
        ADDRESS_TYPE = #{record.addressType,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ADDRESS
    set ID = #{record.id,jdbcType=VARCHAR},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      CONSIGNEE_NAME = #{record.consigneeName,jdbcType=VARCHAR},
      CONSIGNEE_PHONE = #{record.consigneePhone,jdbcType=VARCHAR},
      CONSIGNEE_ADDRESS = #{record.consigneeAddress,jdbcType=VARCHAR},
      DEFAULT_ADDRESS = #{record.defaultAddress,jdbcType=VARCHAR},
      IS_DEFAULT = #{record.isDefault,jdbcType=DECIMAL},
      ADDRESS_TYPE = #{record.addressType,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qianjiajia.kitchen.design.domain.Address">
    update ADDRESS
    <set>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="consigneeName != null">
        CONSIGNEE_NAME = #{consigneeName,jdbcType=VARCHAR},
      </if>
      <if test="consigneePhone != null">
        CONSIGNEE_PHONE = #{consigneePhone,jdbcType=VARCHAR},
      </if>
      <if test="consigneeAddress != null">
        CONSIGNEE_ADDRESS = #{consigneeAddress,jdbcType=VARCHAR},
      </if>
      <if test="defaultAddress != null">
        DEFAULT_ADDRESS = #{defaultAddress,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null">
        IS_DEFAULT = #{isDefault,jdbcType=DECIMAL},
      </if>
      <if test="addressType != null">
        ADDRESS_TYPE = #{addressType,jdbcType=DECIMAL},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qianjiajia.kitchen.design.domain.Address">
    update ADDRESS
    set USER_ID = #{userId,jdbcType=VARCHAR},
      CONSIGNEE_NAME = #{consigneeName,jdbcType=VARCHAR},
      CONSIGNEE_PHONE = #{consigneePhone,jdbcType=VARCHAR},
      CONSIGNEE_ADDRESS = #{consigneeAddress,jdbcType=VARCHAR},
      DEFAULT_ADDRESS = #{defaultAddress,jdbcType=VARCHAR},
      IS_DEFAULT = #{isDefault,jdbcType=DECIMAL},
      ADDRESS_TYPE = #{addressType,jdbcType=DECIMAL}
    where ID = #{id,jdbcType=VARCHAR}
  </update>

  <select id="queryList" resultType="com.qianjiajia.kitchen.design.domain.Address">
    SELECT ID,CONSIGNEE_NAME,CONSIGNEE_PHONE,CONSIGNEE_ADDRESS,ADDRESS_TYPE,IS_DEFAULT
    FROM ADDRESS
  </select>
</mapper>